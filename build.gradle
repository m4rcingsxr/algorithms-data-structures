// -----------------------------------custom-----------------------------------------------------------
plugins {
    id 'application'
    id 'java'
}

apply plugin: 'idea'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testImplementation 'junit:junit:4.13.1'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.9.2'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17) // compilation & runtime + download java
    }
}

test {
    testLogging {
        events "PASSED", "SKIPPED", "FAILED", "STANDARD_OUT", "STANDARD_ERROR"
    }
    useJUnitPlatform()
}


// -----------------------------------custom-----------------------------------------------------------
tasks.register('runAlgorithm', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = project.hasProperty("mainClass") ? project.getProperty("mainClass") : "package.MyDefaultMain"
}

tasks.register('testReport') {
        def file = project.file('build/reports/tests/test/index.html')
        browse file
}


def browse(path) {
    def os = org.gradle.internal.os.OperatingSystem.current()
    if (os.isWindows()) {
        exec { commandLine 'cmd', '/c', "start $path" }
    } else if (os.isLinux() || os.isMacOsX()) {
        exec { commandLine 'open', "$path" }
    }
}

// -------------------------------------------------------------------------------------------------------------------------